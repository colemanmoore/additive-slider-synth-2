{"version":3,"sources":["SynthContext.js","useSlider.js","Slider.js","App.js","Synth.js","index.js"],"names":["SynthContext","React","createContext","useSlider","xPosStart","sliderHeight","initialLevel","useState","sliderOffset","setSliderOffset","meterLevel","setMeterLevel","handleMouseUp","document","removeEventListener","handleMouseMove","pageX","layerY","min","input","max","deltaX","Math","addEventListener","Slider","pid","noteOn","synth","useContext","voice","vca","gain","value","handleMouseDown","handleDoubleClick","useEffect","isNaN","voiceGain","voiceDetune","className","onMouseDown","onMouseUp","onDoubleClick","style","left","height","background","App","mainRef","useRef","setNoteOn","masterGain","setTimeout","current","focus","tabIndex","ref","onKeyDown","keyCode","keyboardInput","onKeyUp","OFF","Object","keys","voices","map","key","AdditiveSynth","numberOfVoices","ctx","this","window","AudioContext","webkitAudioContext","createGain","connect","osc","createOscillator","type","frequency","start","destination","cancelScheduledValues","currentTime","setTargetAtTime","freq","filter","pidString","parseInt","forEach","keyToFrequency","noteChange","changeMasterGain","val","cents","detune","keyboardMapping","65","83","68","70","71","72","74","75","76","c","csh","d","dsh","e","f","fsh","g","gsh","a","ash","b","c8","d8","ReactDOM","render","StrictMode","Provider","Synth","getElementById"],"mappings":"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","file":"static/js/main.8a923453.chunk.js","sourcesContent":["import React from 'react'\nconst SynthContext = React.createContext()\nexport default SynthContext","import { useState } from 'react'\n\nconst within = (min, input, max) => Math.min(Math.max(min, input), max)\n\nconst useSlider = ({ sliderHeight = 100, initialLevel = 0.0 }) => {\n  const [sliderOffset, setSliderOffset] = useState(5)\n  const [meterLevel, setMeterLevel] = useState(initialLevel)\n\n  let xPosStart, xPosEnd\n\n  const handleMouseDown = ({ pageX }) => {\n    xPosStart = xPosEnd = pageX\n    document.addEventListener('mousemove', handleMouseMove)\n    document.addEventListener('mouseup', handleMouseUp)\n  }\n\n  const handleMouseUp = () => {\n    document.removeEventListener('mousemove', handleMouseMove)\n    document.removeEventListener('mouseup', handleMouseUp)\n  }\n\n  const handleMouseMove = ({ pageX, layerY }) => {\n    setMeterLevel((sliderHeight - layerY) / sliderHeight)\n    xPosEnd = pageX\n    const deltaX = xPosEnd - xPosStart\n    if (deltaX !== 0) {\n      setSliderOffset(within(0, sliderOffset + deltaX, 10))\n    }\n  }\n\n  const handleDoubleClick = () => {\n    if (meterLevel === 0) {\n      setMeterLevel(0.5)\n    } else {\n      setMeterLevel(0)\n    }\n  }\n\n  return [\n    meterLevel,\n    setMeterLevel,\n    sliderOffset,\n    handleMouseDown,\n    handleMouseUp,\n    handleDoubleClick\n  ]\n}\n\nexport default useSlider","import React, { useEffect, useContext } from 'react'\nimport './Slider.css'\nimport SynthContext from './SynthContext'\nimport useSlider from './useSlider'\n\nconst sliderHeight = 300\n\nfunction Slider({ pid, noteOn }) {\n\n  const synth = useContext(SynthContext)\n  const voice = synth.voice(pid)\n\n  const [meterLevel, setMeterLevel, sliderOffset, handleMouseDown, handleMouseUp, handleDoubleClick]\n    = useSlider({ sliderHeight, meterLevel: voice.vca.gain.value })\n\n  useEffect(() => {\n    if(!isNaN(meterLevel)) {\n      synth.voiceGain(pid, meterLevel)\n    }\n  }, [meterLevel])\n\n  useEffect(() => {\n    synth.voiceDetune(pid, sliderOffset)\n  }, [sliderOffset])\n\n  const backgroundColor = () => noteOn ? '#b3dbac' : '#ff4499'\n\n  return (\n    <div\n      className=\"Slider\"\n      onMouseDown={handleMouseDown}\n      onMouseUp={handleMouseUp}\n      onDoubleClick={handleDoubleClick}\n    >\n      <div className=\"SliderBody\" style={{left: `${sliderOffset}px`}}>\n        <div\n          className=\"LevelMeter\"\n          style={{height: `${meterLevel * sliderHeight}px`, background: backgroundColor }}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Slider\n","import React, {useContext, useRef, useEffect, useState} from 'react'\nimport './App.css'\nimport Slider from './Slider'\nimport SynthContext from './SynthContext'\n\nfunction App() {\n  const synth = useContext(SynthContext)\n  const mainRef = useRef(null)\n\n  const [noteOn, setNoteOn] = useState(false)\n\n  useEffect(() => {\n    if (synth.masterGain > 0) {\n      setNoteOn(true)\n      setTimeout(() => setNoteOn(false), 100)\n    }\n  }, [synth.masterGain])\n\n  useEffect(() => {\n    mainRef.current.focus()\n  }, [])\n\n  const handleKeyDown = ({ keyCode }) => {\n    // if (nothingPlayedYet) {\n    //   synth.voiceGain(0, 0.5)\n    //   setNothingPlayedYet(false)\n    // }\n    synth.keyboardInput(keyCode)\n  }\n\n  const handleKeyUp = () => {\n    synth.keyboardInput(synth.OFF)\n  }\n\n  return (\n    <div\n      className=\"App\"\n      tabIndex=\"0\"\n      ref={mainRef}\n      onKeyDown={handleKeyDown}\n      onKeyUp={handleKeyUp}\n    >\n      <div className=\"spectrumControls\">\n        {Object.keys(synth.voices).map(pid => (\n          <Slider key={pid} pid={pid} noteOn={noteOn} />\n        ))}\n      </div>\n      <div className=\"hint\">Double-click a slider to turn on a harmonic</div>\n      <div className=\"hint\">Press a key from the middle row of your keyboard: ASDFGHJKL\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","/* Additive Synth */\n\nclass AdditiveSynth {\n\n  OFF = 'OFF'\n  ctx = null\n  voices = {}\n  numberOfVoices = 0\n\n  constructor(numberOfVoices) {\n    this.ctx = new (window.AudioContext || window.webkitAudioContext)()\n    this.masterGain = this.ctx.createGain()\n    this.numberOfVoices = numberOfVoices\n\n    for (let pid = 0; pid < numberOfVoices; pid++) {\n      const vca = this.ctx.createGain()\n      vca.gain.value = 0.0\n      vca.connect(this.masterGain)\n\n      const osc = this.ctx.createOscillator()\n      osc.type = 'sine'\n      osc.frequency.value = 0\n      osc.start()\n      osc.connect(vca)\n\n      this.voices[pid] = {\n        osc,\n        vca\n      }\n    }\n\n    this.masterGain.connect(this.ctx.destination)\n  }\n\n  voice(pid) {\n    return this.voices[pid]\n  }\n\n  changeMasterGain(value) {\n    this.masterGain.gain.cancelScheduledValues(this.ctx.currentTime)\n    this.masterGain.gain.setTargetAtTime(value, this.ctx.currentTime, 0.2)\n  }\n\n  noteChange(freq) {\n    Object.keys(this.voices).filter(pidString => !isNaN(parseInt(pidString))).forEach(pid => {\n      this.voice(pid).osc.frequency.value = freq * (parseInt(pid) + 1)\n    })\n  }\n\n  keyboardInput(keyCode) {\n    if (keyCode === this.OFF) {\n      this.changeMasterGain(0.0)\n      return\n    }\n\n    if (this.keyToFrequency(keyCode)) {\n      this.noteChange(this.keyToFrequency(keyCode) / 4)\n      this.changeMasterGain(1.0)\n    }\n  }\n\n  voiceGain(pid, val) {\n    if (this.voices[pid]) {\n      this.voices[pid].vca.gain.value = val / this.numberOfVoices\n    }\n  }\n\n  voiceDetune(pid, cents) {\n    if (this.voices[pid]) {\n      this.voices[pid].osc.detune.value = cents*5\n    }\n  }a\n\n  keyToFrequency(keyCode) {\n\n    const keyboardMapping = {\n      65: 'a',\n      83: 'd',\n      68: 'e',\n      70: 'fsh',\n      71: 'g',\n      72: 'a',\n      74: 'b',\n      75: 'c8',\n      76: 'd8'\n    }\n\n    const frequencyMap = {\n      c: 261.6,\n      csh: 277.2,\n      d: 297.7,\n      dsh: 311.1,\n      e: 329.6,\n      f: 349.2,\n      fsh: 370,\n      g: 392.0,\n      gsh: 415.3,\n      a: 440.0,\n      ash: 466.2,\n      b: 493.9,\n      c8: 523.2,\n      d8: 595.4\n    }\n\n    if (keyboardMapping[keyCode]) {\n      return frequencyMap[keyboardMapping[keyCode]]\n    }\n  }\n}\n\nexport default AdditiveSynth\n\n//\n// function initReverb(irUrl) {\n//   // wire it up\n//   convolver.connect(masterGain);\n//   voices.forEach(function(voice) {\n//     voice.vca.connect(convolver);\n//   });\n//\n//   var ajaxRequest = new XMLHttpRequest();\n//   ajaxRequest.open('GET', irUrl, true);\n//   ajaxRequest.responseType = 'arraybuffer';\n//\n//   ajaxRequest.onload = function() {\n//     var irData = ajaxRequest.response;\n//     ctx.decodeAudioData(irData, function(buffer) {\n//       ctx.createBufferSource().buffer = buffer;\n//       convolver.buffer = buffer;\n//     });\n//   };\n//\n//   ajaxRequest.send();\n// }","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport Synth from './Synth'\nimport SynthContext from './SynthContext'\n\nReactDOM.render(\n  <React.StrictMode>\n    <SynthContext.Provider value={new Synth(13)}>\n      <App />\n    </SynthContext.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}